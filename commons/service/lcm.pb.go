// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lcm.proto

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	lcm.proto

It has these top-level messages:
	ResourceRequirements
	User
	JobDeploymentRequest
	JobDeploymentResponse
	JobKillRequest
	JobKillResponse
	JobHaltRequest
	JobHaltResponse
	TrainerContainerInfosRequest
	TrainerLogStreamResponse
	CreateEventEndpointRequest
	CreateEventEndpointResponse
	GetEventTypeEndpointsRequest
	GetEventTypeEndpointsResponse
	DeleteEventEndpointRequest
	DeleteEventEndpointResponse
	GetEventEndpointRequest
	GetEventEndpointResponse
	GetMetricsRequest
	GetMetricsResponse
	Endpoint
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusMessages int32

const (
	StatusMessages_NORMAL_OPERATION       StatusMessages = 0
	StatusMessages_INTERNAL_ERROR         StatusMessages = 10
	StatusMessages_INSUFFICIENT_RESOURCES StatusMessages = 20
)

var StatusMessages_name = map[int32]string{
	0:  "NORMAL_OPERATION",
	10: "INTERNAL_ERROR",
	20: "INSUFFICIENT_RESOURCES",
}
var StatusMessages_value = map[string]int32{
	"NORMAL_OPERATION":       0,
	"INTERNAL_ERROR":         10,
	"INSUFFICIENT_RESOURCES": 20,
}

func (x StatusMessages) String() string {
	return proto.EnumName(StatusMessages_name, int32(x))
}
func (StatusMessages) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResourceRequirements_MemoryUnit int32

const (
	ResourceRequirements_MB  ResourceRequirements_MemoryUnit = 0
	ResourceRequirements_MiB ResourceRequirements_MemoryUnit = 1
	ResourceRequirements_GB  ResourceRequirements_MemoryUnit = 2
	ResourceRequirements_GiB ResourceRequirements_MemoryUnit = 3
	ResourceRequirements_TB  ResourceRequirements_MemoryUnit = 4
	ResourceRequirements_TiB ResourceRequirements_MemoryUnit = 5
)

var ResourceRequirements_MemoryUnit_name = map[int32]string{
	0: "MB",
	1: "MiB",
	2: "GB",
	3: "GiB",
	4: "TB",
	5: "TiB",
}
var ResourceRequirements_MemoryUnit_value = map[string]int32{
	"MB":  0,
	"MiB": 1,
	"GB":  2,
	"GiB": 3,
	"TB":  4,
	"TiB": 5,
}

func (x ResourceRequirements_MemoryUnit) String() string {
	return proto.EnumName(ResourceRequirements_MemoryUnit_name, int32(x))
}
func (ResourceRequirements_MemoryUnit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type ResourceRequirements struct {
	Cpus         float64                         `protobuf:"fixed64,1,opt,name=cpus" json:"cpus,omitempty"`
	Gpus         float64                         `protobuf:"fixed64,2,opt,name=gpus" json:"gpus,omitempty"`
	Memory       float64                         `protobuf:"fixed64,3,opt,name=memory" json:"memory,omitempty"`
	MemoryUnit   ResourceRequirements_MemoryUnit `protobuf:"varint,4,opt,name=memory_unit,json=memoryUnit,enum=service.ResourceRequirements_MemoryUnit" json:"memory_unit,omitempty"`
	Learners     int32                           `protobuf:"varint,5,opt,name=learners" json:"learners,omitempty"`
	Schedpolicy  string                          `protobuf:"bytes,6,opt,name=schedpolicy" json:"schedpolicy,omitempty"`
	Topology     string                          `protobuf:"bytes,7,opt,name=topology" json:"topology,omitempty"`
	Architecture string                          `protobuf:"bytes,8,opt,name=architecture" json:"architecture,omitempty"`
	Storage      float64                         `protobuf:"fixed64,9,opt,name=storage" json:"storage,omitempty"`
	StorageUnit  ResourceRequirements_MemoryUnit `protobuf:"varint,10,opt,name=storage_unit,json=storageUnit,enum=service.ResourceRequirements_MemoryUnit" json:"storage_unit,omitempty"`
}

func (m *ResourceRequirements) Reset()                    { *m = ResourceRequirements{} }
func (m *ResourceRequirements) String() string            { return proto.CompactTextString(m) }
func (*ResourceRequirements) ProtoMessage()               {}
func (*ResourceRequirements) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ResourceRequirements) GetCpus() float64 {
	if m != nil {
		return m.Cpus
	}
	return 0
}

func (m *ResourceRequirements) GetGpus() float64 {
	if m != nil {
		return m.Gpus
	}
	return 0
}

func (m *ResourceRequirements) GetMemory() float64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *ResourceRequirements) GetMemoryUnit() ResourceRequirements_MemoryUnit {
	if m != nil {
		return m.MemoryUnit
	}
	return ResourceRequirements_MB
}

func (m *ResourceRequirements) GetLearners() int32 {
	if m != nil {
		return m.Learners
	}
	return 0
}

func (m *ResourceRequirements) GetSchedpolicy() string {
	if m != nil {
		return m.Schedpolicy
	}
	return ""
}

func (m *ResourceRequirements) GetTopology() string {
	if m != nil {
		return m.Topology
	}
	return ""
}

func (m *ResourceRequirements) GetArchitecture() string {
	if m != nil {
		return m.Architecture
	}
	return ""
}

func (m *ResourceRequirements) GetStorage() float64 {
	if m != nil {
		return m.Storage
	}
	return 0
}

func (m *ResourceRequirements) GetStorageUnit() ResourceRequirements_MemoryUnit {
	if m != nil {
		return m.StorageUnit
	}
	return ResourceRequirements_MB
}

type User struct {
	Id        string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Roles     []string `protobuf:"bytes,2,rep,name=roles" json:"roles,omitempty"`
	Firstname string   `protobuf:"bytes,3,opt,name=firstname" json:"firstname,omitempty"`
	Lastname  string   `protobuf:"bytes,4,opt,name=lastname" json:"lastname,omitempty"`
	Email     string   `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *User) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type JobDeploymentRequest struct {
	Name                  string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Resources             *ResourceRequirements `protobuf:"bytes,4,opt,name=resources" json:"resources,omitempty"`
	EnvVars               map[string]string     `protobuf:"bytes,5,rep,name=env_vars,json=envVars" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels                map[string]string     `protobuf:"bytes,6,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	UserId                string                `protobuf:"bytes,7,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	TrainingId            string                `protobuf:"bytes,8,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
	Framework             string                `protobuf:"bytes,9,opt,name=framework" json:"framework,omitempty"`
	Version               string                `protobuf:"bytes,10,opt,name=version" json:"version,omitempty"`
	EvaluationMetricsSpec string                `protobuf:"bytes,11,opt,name=evaluation_metrics_spec,json=evaluationMetricsSpec" json:"evaluation_metrics_spec,omitempty"`
}

func (m *JobDeploymentRequest) Reset()                    { *m = JobDeploymentRequest{} }
func (m *JobDeploymentRequest) String() string            { return proto.CompactTextString(m) }
func (*JobDeploymentRequest) ProtoMessage()               {}
func (*JobDeploymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *JobDeploymentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobDeploymentRequest) GetResources() *ResourceRequirements {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *JobDeploymentRequest) GetEnvVars() map[string]string {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *JobDeploymentRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *JobDeploymentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *JobDeploymentRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

func (m *JobDeploymentRequest) GetFramework() string {
	if m != nil {
		return m.Framework
	}
	return ""
}

func (m *JobDeploymentRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *JobDeploymentRequest) GetEvaluationMetricsSpec() string {
	if m != nil {
		return m.EvaluationMetricsSpec
	}
	return ""
}

type JobDeploymentResponse struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *JobDeploymentResponse) Reset()                    { *m = JobDeploymentResponse{} }
func (m *JobDeploymentResponse) String() string            { return proto.CompactTextString(m) }
func (*JobDeploymentResponse) ProtoMessage()               {}
func (*JobDeploymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *JobDeploymentResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobDeploymentResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type JobKillRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *JobKillRequest) Reset()                    { *m = JobKillRequest{} }
func (m *JobKillRequest) String() string            { return proto.CompactTextString(m) }
func (*JobKillRequest) ProtoMessage()               {}
func (*JobKillRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *JobKillRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobKillRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

func (m *JobKillRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type JobKillResponse struct {
}

func (m *JobKillResponse) Reset()                    { *m = JobKillResponse{} }
func (m *JobKillResponse) String() string            { return proto.CompactTextString(m) }
func (*JobKillResponse) ProtoMessage()               {}
func (*JobKillResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type JobHaltRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	TrainingId string `protobuf:"bytes,2,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *JobHaltRequest) Reset()                    { *m = JobHaltRequest{} }
func (m *JobHaltRequest) String() string            { return proto.CompactTextString(m) }
func (*JobHaltRequest) ProtoMessage()               {}
func (*JobHaltRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *JobHaltRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobHaltRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

func (m *JobHaltRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type JobHaltResponse struct {
}

func (m *JobHaltResponse) Reset()                    { *m = JobHaltResponse{} }
func (m *JobHaltResponse) String() string            { return proto.CompactTextString(m) }
func (*JobHaltResponse) ProtoMessage()               {}
func (*JobHaltResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type TrainerContainerInfosRequest struct {
	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Follow     bool   `protobuf:"varint,3,opt,name=follow" json:"follow,omitempty"`
	Metrics    bool   `protobuf:"varint,4,opt,name=metrics" json:"metrics,omitempty"`
	Summary    bool   `protobuf:"varint,5,opt,name=summary" json:"summary,omitempty"`
}

func (m *TrainerContainerInfosRequest) Reset()                    { *m = TrainerContainerInfosRequest{} }
func (m *TrainerContainerInfosRequest) String() string            { return proto.CompactTextString(m) }
func (*TrainerContainerInfosRequest) ProtoMessage()               {}
func (*TrainerContainerInfosRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *TrainerContainerInfosRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

func (m *TrainerContainerInfosRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TrainerContainerInfosRequest) GetFollow() bool {
	if m != nil {
		return m.Follow
	}
	return false
}

func (m *TrainerContainerInfosRequest) GetMetrics() bool {
	if m != nil {
		return m.Metrics
	}
	return false
}

func (m *TrainerContainerInfosRequest) GetSummary() bool {
	if m != nil {
		return m.Summary
	}
	return false
}

type TrainerLogStreamResponse struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *TrainerLogStreamResponse) Reset()                    { *m = TrainerLogStreamResponse{} }
func (m *TrainerLogStreamResponse) String() string            { return proto.CompactTextString(m) }
func (*TrainerLogStreamResponse) ProtoMessage()               {}
func (*TrainerLogStreamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *TrainerLogStreamResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateEventEndpointRequest struct {
	TrainingId   string `protobuf:"bytes,1,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	EventType    string `protobuf:"bytes,3,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	EndpointUrl  string `protobuf:"bytes,4,opt,name=endpoint_url,json=endpointUrl" json:"endpoint_url,omitempty"`
	EndpointType string `protobuf:"bytes,5,opt,name=endpoint_type,json=endpointType" json:"endpoint_type,omitempty"`
	EndpointId   string `protobuf:"bytes,6,opt,name=endpoint_id,json=endpointId" json:"endpoint_id,omitempty"`
}

func (m *CreateEventEndpointRequest) Reset()                    { *m = CreateEventEndpointRequest{} }
func (m *CreateEventEndpointRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateEventEndpointRequest) ProtoMessage()               {}
func (*CreateEventEndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CreateEventEndpointRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

func (m *CreateEventEndpointRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateEventEndpointRequest) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *CreateEventEndpointRequest) GetEndpointUrl() string {
	if m != nil {
		return m.EndpointUrl
	}
	return ""
}

func (m *CreateEventEndpointRequest) GetEndpointType() string {
	if m != nil {
		return m.EndpointType
	}
	return ""
}

func (m *CreateEventEndpointRequest) GetEndpointId() string {
	if m != nil {
		return m.EndpointId
	}
	return ""
}

type CreateEventEndpointResponse struct {
}

func (m *CreateEventEndpointResponse) Reset()                    { *m = CreateEventEndpointResponse{} }
func (m *CreateEventEndpointResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateEventEndpointResponse) ProtoMessage()               {}
func (*CreateEventEndpointResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type GetEventTypeEndpointsRequest struct {
	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	EventType  string `protobuf:"bytes,3,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
}

func (m *GetEventTypeEndpointsRequest) Reset()                    { *m = GetEventTypeEndpointsRequest{} }
func (m *GetEventTypeEndpointsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEventTypeEndpointsRequest) ProtoMessage()               {}
func (*GetEventTypeEndpointsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GetEventTypeEndpointsRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

func (m *GetEventTypeEndpointsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetEventTypeEndpointsRequest) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

type GetEventTypeEndpointsResponse struct {
	Endpoints []*Endpoint `protobuf:"bytes,1,rep,name=endpoints" json:"endpoints,omitempty"`
}

func (m *GetEventTypeEndpointsResponse) Reset()                    { *m = GetEventTypeEndpointsResponse{} }
func (m *GetEventTypeEndpointsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEventTypeEndpointsResponse) ProtoMessage()               {}
func (*GetEventTypeEndpointsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetEventTypeEndpointsResponse) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type DeleteEventEndpointRequest struct {
	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	EventType  string `protobuf:"bytes,3,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	EndpointId string `protobuf:"bytes,4,opt,name=endpoint_id,json=endpointId" json:"endpoint_id,omitempty"`
}

func (m *DeleteEventEndpointRequest) Reset()                    { *m = DeleteEventEndpointRequest{} }
func (m *DeleteEventEndpointRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteEventEndpointRequest) ProtoMessage()               {}
func (*DeleteEventEndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *DeleteEventEndpointRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

func (m *DeleteEventEndpointRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteEventEndpointRequest) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *DeleteEventEndpointRequest) GetEndpointId() string {
	if m != nil {
		return m.EndpointId
	}
	return ""
}

type DeleteEventEndpointResponse struct {
}

func (m *DeleteEventEndpointResponse) Reset()                    { *m = DeleteEventEndpointResponse{} }
func (m *DeleteEventEndpointResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteEventEndpointResponse) ProtoMessage()               {}
func (*DeleteEventEndpointResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type GetEventEndpointRequest struct {
	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	EventType  string `protobuf:"bytes,3,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	EndpointId string `protobuf:"bytes,4,opt,name=endpoint_id,json=endpointId" json:"endpoint_id,omitempty"`
}

func (m *GetEventEndpointRequest) Reset()                    { *m = GetEventEndpointRequest{} }
func (m *GetEventEndpointRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEventEndpointRequest) ProtoMessage()               {}
func (*GetEventEndpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GetEventEndpointRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

func (m *GetEventEndpointRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetEventEndpointRequest) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *GetEventEndpointRequest) GetEndpointId() string {
	if m != nil {
		return m.EndpointId
	}
	return ""
}

type GetEventEndpointResponse struct {
	Url          string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	EndpointType string `protobuf:"bytes,2,opt,name=endpoint_type,json=endpointType" json:"endpoint_type,omitempty"`
}

func (m *GetEventEndpointResponse) Reset()                    { *m = GetEventEndpointResponse{} }
func (m *GetEventEndpointResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEventEndpointResponse) ProtoMessage()               {}
func (*GetEventEndpointResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *GetEventEndpointResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GetEventEndpointResponse) GetEndpointType() string {
	if m != nil {
		return m.EndpointType
	}
	return ""
}

type GetMetricsRequest struct {
	TrainingId string `protobuf:"bytes,1,opt,name=training_id,json=trainingId" json:"training_id,omitempty"`
}

func (m *GetMetricsRequest) Reset()                    { *m = GetMetricsRequest{} }
func (m *GetMetricsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMetricsRequest) ProtoMessage()               {}
func (*GetMetricsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *GetMetricsRequest) GetTrainingId() string {
	if m != nil {
		return m.TrainingId
	}
	return ""
}

type GetMetricsResponse struct {
	Metrics string `protobuf:"bytes,1,opt,name=metrics" json:"metrics,omitempty"`
}

func (m *GetMetricsResponse) Reset()                    { *m = GetMetricsResponse{} }
func (m *GetMetricsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMetricsResponse) ProtoMessage()               {}
func (*GetMetricsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetMetricsResponse) GetMetrics() string {
	if m != nil {
		return m.Metrics
	}
	return ""
}

type Endpoint struct {
	Id  string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (m *Endpoint) Reset()                    { *m = Endpoint{} }
func (m *Endpoint) String() string            { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()               {}
func (*Endpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Endpoint) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Endpoint) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*ResourceRequirements)(nil), "service.ResourceRequirements")
	proto.RegisterType((*User)(nil), "service.User")
	proto.RegisterType((*JobDeploymentRequest)(nil), "service.JobDeploymentRequest")
	proto.RegisterType((*JobDeploymentResponse)(nil), "service.JobDeploymentResponse")
	proto.RegisterType((*JobKillRequest)(nil), "service.JobKillRequest")
	proto.RegisterType((*JobKillResponse)(nil), "service.JobKillResponse")
	proto.RegisterType((*JobHaltRequest)(nil), "service.JobHaltRequest")
	proto.RegisterType((*JobHaltResponse)(nil), "service.JobHaltResponse")
	proto.RegisterType((*TrainerContainerInfosRequest)(nil), "service.TrainerContainerInfosRequest")
	proto.RegisterType((*TrainerLogStreamResponse)(nil), "service.TrainerLogStreamResponse")
	proto.RegisterType((*CreateEventEndpointRequest)(nil), "service.CreateEventEndpointRequest")
	proto.RegisterType((*CreateEventEndpointResponse)(nil), "service.CreateEventEndpointResponse")
	proto.RegisterType((*GetEventTypeEndpointsRequest)(nil), "service.GetEventTypeEndpointsRequest")
	proto.RegisterType((*GetEventTypeEndpointsResponse)(nil), "service.GetEventTypeEndpointsResponse")
	proto.RegisterType((*DeleteEventEndpointRequest)(nil), "service.DeleteEventEndpointRequest")
	proto.RegisterType((*DeleteEventEndpointResponse)(nil), "service.DeleteEventEndpointResponse")
	proto.RegisterType((*GetEventEndpointRequest)(nil), "service.GetEventEndpointRequest")
	proto.RegisterType((*GetEventEndpointResponse)(nil), "service.GetEventEndpointResponse")
	proto.RegisterType((*GetMetricsRequest)(nil), "service.GetMetricsRequest")
	proto.RegisterType((*GetMetricsResponse)(nil), "service.GetMetricsResponse")
	proto.RegisterType((*Endpoint)(nil), "service.Endpoint")
	proto.RegisterEnum("service.StatusMessages", StatusMessages_name, StatusMessages_value)
	proto.RegisterEnum("service.ResourceRequirements_MemoryUnit", ResourceRequirements_MemoryUnit_name, ResourceRequirements_MemoryUnit_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LifecycleManager service

type LifecycleManagerClient interface {
	DeployTrainingJob(ctx context.Context, in *JobDeploymentRequest, opts ...grpc.CallOption) (*JobDeploymentResponse, error)
	KillTrainingJob(ctx context.Context, in *JobKillRequest, opts ...grpc.CallOption) (*JobKillResponse, error)
	GetTrainingLogStream(ctx context.Context, in *TrainerContainerInfosRequest, opts ...grpc.CallOption) (LifecycleManager_GetTrainingLogStreamClient, error)
	HaltTrainingJob(ctx context.Context, in *JobHaltRequest, opts ...grpc.CallOption) (*JobHaltResponse, error)
	// creates an endpoint with a specific id for an event type
	CreateEventEndpoint(ctx context.Context, in *CreateEventEndpointRequest, opts ...grpc.CallOption) (*CreateEventEndpointResponse, error)
	// deletes a specific endpoint (defined by event type and endpoint id)
	DeleteEventEndpoint(ctx context.Context, in *DeleteEventEndpointRequest, opts ...grpc.CallOption) (*DeleteEventEndpointResponse, error)
	// gets all endpoints registered for an event type
	GetEventTypeEndpoints(ctx context.Context, in *GetEventTypeEndpointsRequest, opts ...grpc.CallOption) (*GetEventTypeEndpointsResponse, error)
	// gets a specific endpoint
	GetEventEndpoint(ctx context.Context, in *GetEventEndpointRequest, opts ...grpc.CallOption) (*GetEventEndpointResponse, error)
	GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsResponse, error)
}

type lifecycleManagerClient struct {
	cc *grpc.ClientConn
}

func NewLifecycleManagerClient(cc *grpc.ClientConn) LifecycleManagerClient {
	return &lifecycleManagerClient{cc}
}

func (c *lifecycleManagerClient) DeployTrainingJob(ctx context.Context, in *JobDeploymentRequest, opts ...grpc.CallOption) (*JobDeploymentResponse, error) {
	out := new(JobDeploymentResponse)
	err := grpc.Invoke(ctx, "/service.LifecycleManager/DeployTrainingJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) KillTrainingJob(ctx context.Context, in *JobKillRequest, opts ...grpc.CallOption) (*JobKillResponse, error) {
	out := new(JobKillResponse)
	err := grpc.Invoke(ctx, "/service.LifecycleManager/KillTrainingJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) GetTrainingLogStream(ctx context.Context, in *TrainerContainerInfosRequest, opts ...grpc.CallOption) (LifecycleManager_GetTrainingLogStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_LifecycleManager_serviceDesc.Streams[0], c.cc, "/service.LifecycleManager/GetTrainingLogStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &lifecycleManagerGetTrainingLogStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LifecycleManager_GetTrainingLogStreamClient interface {
	Recv() (*TrainerLogStreamResponse, error)
	grpc.ClientStream
}

type lifecycleManagerGetTrainingLogStreamClient struct {
	grpc.ClientStream
}

func (x *lifecycleManagerGetTrainingLogStreamClient) Recv() (*TrainerLogStreamResponse, error) {
	m := new(TrainerLogStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *lifecycleManagerClient) HaltTrainingJob(ctx context.Context, in *JobHaltRequest, opts ...grpc.CallOption) (*JobHaltResponse, error) {
	out := new(JobHaltResponse)
	err := grpc.Invoke(ctx, "/service.LifecycleManager/HaltTrainingJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) CreateEventEndpoint(ctx context.Context, in *CreateEventEndpointRequest, opts ...grpc.CallOption) (*CreateEventEndpointResponse, error) {
	out := new(CreateEventEndpointResponse)
	err := grpc.Invoke(ctx, "/service.LifecycleManager/CreateEventEndpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) DeleteEventEndpoint(ctx context.Context, in *DeleteEventEndpointRequest, opts ...grpc.CallOption) (*DeleteEventEndpointResponse, error) {
	out := new(DeleteEventEndpointResponse)
	err := grpc.Invoke(ctx, "/service.LifecycleManager/DeleteEventEndpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) GetEventTypeEndpoints(ctx context.Context, in *GetEventTypeEndpointsRequest, opts ...grpc.CallOption) (*GetEventTypeEndpointsResponse, error) {
	out := new(GetEventTypeEndpointsResponse)
	err := grpc.Invoke(ctx, "/service.LifecycleManager/GetEventTypeEndpoints", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) GetEventEndpoint(ctx context.Context, in *GetEventEndpointRequest, opts ...grpc.CallOption) (*GetEventEndpointResponse, error) {
	out := new(GetEventEndpointResponse)
	err := grpc.Invoke(ctx, "/service.LifecycleManager/GetEventEndpoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecycleManagerClient) GetMetrics(ctx context.Context, in *GetMetricsRequest, opts ...grpc.CallOption) (*GetMetricsResponse, error) {
	out := new(GetMetricsResponse)
	err := grpc.Invoke(ctx, "/service.LifecycleManager/GetMetrics", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LifecycleManager service

type LifecycleManagerServer interface {
	DeployTrainingJob(context.Context, *JobDeploymentRequest) (*JobDeploymentResponse, error)
	KillTrainingJob(context.Context, *JobKillRequest) (*JobKillResponse, error)
	GetTrainingLogStream(*TrainerContainerInfosRequest, LifecycleManager_GetTrainingLogStreamServer) error
	HaltTrainingJob(context.Context, *JobHaltRequest) (*JobHaltResponse, error)
	// creates an endpoint with a specific id for an event type
	CreateEventEndpoint(context.Context, *CreateEventEndpointRequest) (*CreateEventEndpointResponse, error)
	// deletes a specific endpoint (defined by event type and endpoint id)
	DeleteEventEndpoint(context.Context, *DeleteEventEndpointRequest) (*DeleteEventEndpointResponse, error)
	// gets all endpoints registered for an event type
	GetEventTypeEndpoints(context.Context, *GetEventTypeEndpointsRequest) (*GetEventTypeEndpointsResponse, error)
	// gets a specific endpoint
	GetEventEndpoint(context.Context, *GetEventEndpointRequest) (*GetEventEndpointResponse, error)
	GetMetrics(context.Context, *GetMetricsRequest) (*GetMetricsResponse, error)
}

func RegisterLifecycleManagerServer(s *grpc.Server, srv LifecycleManagerServer) {
	s.RegisterService(&_LifecycleManager_serviceDesc, srv)
}

func _LifecycleManager_DeployTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).DeployTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/DeployTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).DeployTrainingJob(ctx, req.(*JobDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_KillTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobKillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).KillTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/KillTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).KillTrainingJob(ctx, req.(*JobKillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_GetTrainingLogStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TrainerContainerInfosRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LifecycleManagerServer).GetTrainingLogStream(m, &lifecycleManagerGetTrainingLogStreamServer{stream})
}

type LifecycleManager_GetTrainingLogStreamServer interface {
	Send(*TrainerLogStreamResponse) error
	grpc.ServerStream
}

type lifecycleManagerGetTrainingLogStreamServer struct {
	grpc.ServerStream
}

func (x *lifecycleManagerGetTrainingLogStreamServer) Send(m *TrainerLogStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _LifecycleManager_HaltTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobHaltRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).HaltTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/HaltTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).HaltTrainingJob(ctx, req.(*JobHaltRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_CreateEventEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).CreateEventEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/CreateEventEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).CreateEventEndpoint(ctx, req.(*CreateEventEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_DeleteEventEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEventEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).DeleteEventEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/DeleteEventEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).DeleteEventEndpoint(ctx, req.(*DeleteEventEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_GetEventTypeEndpoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventTypeEndpointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).GetEventTypeEndpoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/GetEventTypeEndpoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).GetEventTypeEndpoints(ctx, req.(*GetEventTypeEndpointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_GetEventEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).GetEventEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/GetEventEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).GetEventEndpoint(ctx, req.(*GetEventEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecycleManager_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecycleManagerServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.LifecycleManager/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecycleManagerServer).GetMetrics(ctx, req.(*GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LifecycleManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.LifecycleManager",
	HandlerType: (*LifecycleManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeployTrainingJob",
			Handler:    _LifecycleManager_DeployTrainingJob_Handler,
		},
		{
			MethodName: "KillTrainingJob",
			Handler:    _LifecycleManager_KillTrainingJob_Handler,
		},
		{
			MethodName: "HaltTrainingJob",
			Handler:    _LifecycleManager_HaltTrainingJob_Handler,
		},
		{
			MethodName: "CreateEventEndpoint",
			Handler:    _LifecycleManager_CreateEventEndpoint_Handler,
		},
		{
			MethodName: "DeleteEventEndpoint",
			Handler:    _LifecycleManager_DeleteEventEndpoint_Handler,
		},
		{
			MethodName: "GetEventTypeEndpoints",
			Handler:    _LifecycleManager_GetEventTypeEndpoints_Handler,
		},
		{
			MethodName: "GetEventEndpoint",
			Handler:    _LifecycleManager_GetEventEndpoint_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _LifecycleManager_GetMetrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTrainingLogStream",
			Handler:       _LifecycleManager_GetTrainingLogStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "lcm.proto",
}

func init() { proto.RegisterFile("lcm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x57, 0xef, 0x6e, 0x1b, 0x45,
	0x10, 0xcf, 0xd9, 0x8e, 0xe3, 0x1b, 0x87, 0xf4, 0xb2, 0xa4, 0xc9, 0xe9, 0xda, 0xd0, 0xf4, 0x0a,
	0xc8, 0x54, 0xc8, 0xa0, 0x80, 0x10, 0x94, 0x0f, 0x28, 0x49, 0xdd, 0xe0, 0x36, 0x4e, 0xca, 0xc6,
	0xa9, 0xc4, 0x17, 0xac, 0xcb, 0x79, 0xe2, 0x9e, 0x7a, 0x7f, 0xcc, 0xee, 0xda, 0x95, 0x25, 0x9e,
	0x02, 0x24, 0x9e, 0x80, 0x47, 0xe0, 0x1d, 0x78, 0x0b, 0x9e, 0x05, 0xed, 0xde, 0xde, 0xf9, 0x62,
	0x3b, 0x86, 0x22, 0x15, 0xf1, 0x6d, 0x67, 0x66, 0x67, 0xe6, 0x37, 0x7f, 0xee, 0xb7, 0x36, 0x98,
	0xa1, 0x1f, 0x35, 0x87, 0x2c, 0x11, 0x09, 0x59, 0xe3, 0xc8, 0xc6, 0x81, 0x8f, 0xee, 0x1f, 0x65,
	0xd8, 0xa2, 0xc8, 0x93, 0x11, 0xf3, 0x91, 0xe2, 0x8f, 0xa3, 0x80, 0x61, 0x84, 0xb1, 0xe0, 0x84,
	0x40, 0xc5, 0x1f, 0x8e, 0xb8, 0x6d, 0xec, 0x19, 0x0d, 0x83, 0xaa, 0xb3, 0xd4, 0x0d, 0xa4, 0xae,
	0x94, 0xea, 0xe4, 0x99, 0x6c, 0x43, 0x35, 0xc2, 0x28, 0x61, 0x13, 0xbb, 0xac, 0xb4, 0x5a, 0x22,
	0x6d, 0xa8, 0xa7, 0xa7, 0xde, 0x28, 0x0e, 0x84, 0x5d, 0xd9, 0x33, 0x1a, 0x1b, 0xfb, 0x8d, 0xa6,
	0xce, 0xdb, 0x5c, 0x94, 0xb3, 0xd9, 0x51, 0x0e, 0x17, 0x71, 0x20, 0x28, 0x44, 0xf9, 0x99, 0x38,
	0x50, 0x0b, 0xd1, 0x63, 0x31, 0x32, 0x6e, 0xaf, 0xee, 0x19, 0x8d, 0x55, 0x9a, 0xcb, 0x64, 0x0f,
	0xea, 0xdc, 0x7f, 0x89, 0xfd, 0x61, 0x12, 0x06, 0xfe, 0xc4, 0xae, 0xee, 0x19, 0x0d, 0x93, 0x16,
	0x55, 0xd2, 0x5b, 0x24, 0xc3, 0x24, 0x4c, 0x06, 0x13, 0x7b, 0x4d, 0x99, 0x73, 0x99, 0xb8, 0xb0,
	0xee, 0x31, 0xff, 0x65, 0x20, 0xd0, 0x17, 0x23, 0x86, 0x76, 0x4d, 0xd9, 0xaf, 0xe9, 0x88, 0x0d,
	0x6b, 0x5c, 0x24, 0xcc, 0x1b, 0xa0, 0x6d, 0xaa, 0x0a, 0x33, 0x91, 0x3c, 0x83, 0x75, 0x7d, 0x4c,
	0x6b, 0x84, 0x37, 0xac, 0xb1, 0xae, 0xbd, 0xa5, 0xe0, 0x7e, 0x03, 0x30, 0x35, 0x91, 0x2a, 0x94,
	0x3a, 0x87, 0xd6, 0x0a, 0x59, 0x83, 0x72, 0x27, 0x38, 0xb4, 0x0c, 0xa9, 0x38, 0x3e, 0xb4, 0x4a,
	0x52, 0x71, 0x1c, 0x1c, 0x5a, 0x65, 0xa9, 0xe8, 0x1e, 0x5a, 0x15, 0xa9, 0xe8, 0x06, 0x87, 0xd6,
	0xaa, 0xfb, 0x13, 0x54, 0x2e, 0x38, 0x32, 0xb2, 0x01, 0xa5, 0xa0, 0xaf, 0xc6, 0x66, 0xd2, 0x52,
	0xd0, 0x27, 0x5b, 0xb0, 0xca, 0x92, 0x10, 0xe5, 0xd4, 0xca, 0x0d, 0x93, 0xa6, 0x02, 0xb9, 0x0b,
	0xe6, 0x55, 0xc0, 0xb8, 0x88, 0xbd, 0x08, 0xd5, 0xe4, 0x4c, 0x3a, 0x55, 0xa8, 0x8e, 0x7b, 0xda,
	0x58, 0x49, 0x7b, 0x96, 0xc9, 0x32, 0x1e, 0x46, 0x5e, 0x10, 0xaa, 0x51, 0x98, 0x34, 0x15, 0xdc,
	0x9f, 0x2b, 0xb0, 0xf5, 0x34, 0xb9, 0x7c, 0x8c, 0xc3, 0x30, 0x99, 0xc8, 0x4a, 0x65, 0xd1, 0xc8,
	0x85, 0xdc, 0x19, 0x15, 0x26, 0x05, 0xa4, 0xce, 0xe4, 0x6b, 0x30, 0x99, 0xee, 0x0d, 0x57, 0xf1,
	0xeb, 0xfb, 0xbb, 0x4b, 0xbb, 0x46, 0xa7, 0xf7, 0x49, 0x0b, 0x6a, 0x18, 0x8f, 0x7b, 0x63, 0x4f,
	0x6d, 0x43, 0xb9, 0x51, 0xdf, 0x7f, 0x98, 0xfb, 0x2e, 0x42, 0xd0, 0x6c, 0xc5, 0xe3, 0x17, 0x1e,
	0xe3, 0xad, 0x58, 0xb0, 0x09, 0x5d, 0xc3, 0x54, 0x22, 0x07, 0x50, 0x0d, 0xbd, 0x4b, 0x0c, 0xb9,
	0x5d, 0x55, 0x41, 0x3e, 0x5a, 0x1e, 0xe4, 0x44, 0xdd, 0x4d, 0x63, 0x68, 0x47, 0xb2, 0x03, 0x6b,
	0x23, 0x8e, 0xac, 0x17, 0xf4, 0xf5, 0x62, 0x55, 0xa5, 0xd8, 0xee, 0x93, 0x7b, 0x50, 0x17, 0xcc,
	0x0b, 0xe2, 0x20, 0x1e, 0x48, 0x63, 0xba, 0x55, 0x90, 0xa9, 0xda, 0x7d, 0xd5, 0x7d, 0xe6, 0x45,
	0xf8, 0x3a, 0x61, 0xaf, 0xd4, 0x56, 0xc9, 0xee, 0x67, 0x0a, 0xb9, 0x71, 0x63, 0x64, 0x3c, 0x48,
	0x62, 0xb5, 0x52, 0x26, 0xcd, 0x44, 0xf2, 0x05, 0xec, 0xe0, 0xd8, 0x0b, 0x47, 0x9e, 0x08, 0x92,
	0xb8, 0x17, 0xa1, 0x60, 0x81, 0xcf, 0x7b, 0x7c, 0x88, 0xbe, 0x5d, 0x57, 0x37, 0x6f, 0x4f, 0xcd,
	0x9d, 0xd4, 0x7a, 0x3e, 0x44, 0xdf, 0x79, 0x04, 0xeb, 0xc5, 0x2e, 0x10, 0x0b, 0xca, 0xaf, 0x70,
	0xa2, 0x67, 0x22, 0x8f, 0x72, 0xaa, 0xd2, 0x13, 0xd5, 0xb7, 0x6d, 0xd2, 0x54, 0x78, 0x54, 0xfa,
	0xd2, 0x70, 0xbe, 0x82, 0x7a, 0xa1, 0xf8, 0x37, 0x71, 0x75, 0x8f, 0xe0, 0xf6, 0x4c, 0x33, 0xf9,
	0x30, 0x89, 0x39, 0x2e, 0x5c, 0x8a, 0x6d, 0xa8, 0x72, 0xe1, 0x09, 0x4d, 0x2f, 0x26, 0xd5, 0x92,
	0xfb, 0x03, 0x6c, 0x3c, 0x4d, 0x2e, 0x9f, 0x05, 0x61, 0xb8, 0x6c, 0xa5, 0x66, 0x5a, 0x5e, 0x9a,
	0x6b, 0x79, 0x61, 0x58, 0xe5, 0xe2, 0xb0, 0xdc, 0x4d, 0xb8, 0x95, 0xc7, 0x4f, 0xe1, 0xe9, 0x94,
	0xdf, 0x7a, 0xa1, 0x78, 0x9b, 0x29, 0xd3, 0xf8, 0x3a, 0xe5, 0x6f, 0x06, 0xdc, 0xed, 0x4a, 0x57,
	0x64, 0x47, 0x49, 0x2c, 0xd4, 0xa1, 0x1d, 0x5f, 0x25, 0x3c, 0x43, 0x30, 0x93, 0xcd, 0x58, 0x96,
	0xad, 0x74, 0x6d, 0x1b, 0xb7, 0xa1, 0x7a, 0x95, 0x84, 0x61, 0xf2, 0x5a, 0xa1, 0xa8, 0x51, 0x2d,
	0xc9, 0x35, 0xd3, 0x1b, 0xa4, 0xbe, 0xc1, 0x1a, 0xcd, 0x44, 0x45, 0x79, 0xa3, 0x28, 0xf2, 0xd8,
	0x44, 0x7d, 0xe4, 0x35, 0x9a, 0x89, 0x6e, 0x13, 0x6c, 0x8d, 0xf2, 0x24, 0x19, 0x9c, 0x0b, 0x86,
	0x5e, 0x54, 0x1c, 0x6a, 0xdf, 0x13, 0x9e, 0x82, 0xb6, 0x4e, 0xd5, 0xd9, 0xfd, 0xd3, 0x00, 0xe7,
	0x88, 0xa1, 0x27, 0xb0, 0x35, 0xc6, 0x58, 0xb4, 0xe2, 0xfe, 0x30, 0x09, 0xa6, 0xe4, 0xf0, 0xef,
	0x8b, 0xda, 0x05, 0x40, 0x19, 0xb1, 0x27, 0x26, 0xc3, 0x9c, 0xc0, 0x94, 0xa6, 0x3b, 0x19, 0x22,
	0xb9, 0x0f, 0xeb, 0xa8, 0x73, 0xf5, 0x46, 0x2c, 0xd4, 0x24, 0x56, 0xcf, 0x74, 0x17, 0x2c, 0x24,
	0x0f, 0xe0, 0x9d, 0xfc, 0x8a, 0x0a, 0x92, 0xf2, 0x59, 0xee, 0xa7, 0xe2, 0xdc, 0x83, 0xdc, 0x47,
	0x62, 0x48, 0x9f, 0x17, 0xc8, 0x54, 0xed, 0xbe, 0xbb, 0x0b, 0x77, 0x16, 0xd6, 0xa7, 0xc7, 0xfa,
	0x1a, 0xee, 0x1e, 0xa3, 0x68, 0x65, 0xb8, 0x32, 0x3b, 0x7f, 0xdb, 0x0d, 0x70, 0x9f, 0xc3, 0xee,
	0x0d, 0x89, 0xf5, 0xb4, 0x3e, 0x01, 0x33, 0x2b, 0x43, 0x3e, 0xf2, 0x92, 0x02, 0x37, 0x73, 0x0a,
	0xcc, 0xeb, 0x98, 0xde, 0x71, 0x7f, 0x35, 0xc0, 0x79, 0x8c, 0x21, 0xfe, 0xd7, 0xa3, 0x9c, 0x19,
	0x41, 0x65, 0xd1, 0x08, 0x16, 0xe2, 0xd2, 0x23, 0xf8, 0xc5, 0x80, 0x9d, 0xac, 0x15, 0xff, 0x1f,
	0xd0, 0xdf, 0x81, 0x3d, 0x0f, 0x4a, 0x8f, 0xc6, 0x82, 0xb2, 0xdc, 0x59, 0x4d, 0xb1, 0xa3, 0x45,
	0xbb, 0x5a, 0x9a, 0xdf, 0x55, 0xf7, 0x73, 0xd8, 0x3c, 0x46, 0xa1, 0x69, 0xff, 0x9f, 0x56, 0xe8,
	0x36, 0x81, 0x14, 0xbd, 0x34, 0x84, 0x02, 0x37, 0xa4, 0x2e, 0x99, 0xe8, 0x7e, 0x0c, 0xb5, 0x0c,
	0xf0, 0xdc, 0x4f, 0x0d, 0x0d, 0xbc, 0x94, 0x03, 0x7f, 0xf8, 0x02, 0x36, 0xce, 0x15, 0x8d, 0x77,
	0x90, 0x73, 0x6f, 0x80, 0x9c, 0x6c, 0x81, 0x75, 0x7a, 0x46, 0x3b, 0x07, 0x27, 0xbd, 0xb3, 0xe7,
	0x2d, 0x7a, 0xd0, 0x6d, 0x9f, 0x9d, 0x5a, 0x2b, 0x84, 0xc0, 0x46, 0xfb, 0xb4, 0xdb, 0xa2, 0xa7,
	0x07, 0x27, 0xbd, 0x16, 0xa5, 0x67, 0xd4, 0x02, 0xe2, 0xc0, 0x76, 0xfb, 0xf4, 0xfc, 0xe2, 0xc9,
	0x93, 0xf6, 0x51, 0xbb, 0x75, 0xda, 0xed, 0xd1, 0xd6, 0xf9, 0xd9, 0x05, 0x3d, 0x6a, 0x9d, 0x5b,
	0x5b, 0xfb, 0xbf, 0x57, 0xc1, 0x3a, 0x09, 0xae, 0xd0, 0x9f, 0xf8, 0x21, 0x76, 0xbc, 0xd8, 0x1b,
	0x20, 0x23, 0x5d, 0xd8, 0x4c, 0xdf, 0x9a, 0xae, 0x2e, 0xef, 0x69, 0x72, 0x49, 0x76, 0x97, 0xbe,
	0xeb, 0xce, 0x7b, 0x37, 0x99, 0xf5, 0xf6, 0xac, 0x90, 0x27, 0x70, 0x4b, 0x3e, 0x0e, 0xc5, 0x98,
	0x3b, 0x45, 0xa7, 0xc2, 0xcb, 0xe4, 0xd8, 0xf3, 0x86, 0x3c, 0x4e, 0x1f, 0xb6, 0x8e, 0x51, 0x64,
	0x61, 0x72, 0xfa, 0x24, 0x1f, 0xe4, 0x3e, 0xcb, 0xf8, 0xdf, 0xb9, 0x3f, 0x7b, 0x6d, 0x8e, 0x80,
	0xdd, 0x95, 0x4f, 0x0d, 0x89, 0x56, 0xbe, 0x2b, 0x37, 0xa2, 0x2d, 0x3c, 0x6a, 0xd7, 0xd1, 0x5e,
	0x7b, 0x8d, 0x56, 0xc8, 0x25, 0xbc, 0xbb, 0x80, 0xd7, 0xc8, 0x83, 0xdc, 0xe5, 0x66, 0x56, 0x77,
	0xde, 0x5f, 0x7e, 0xa9, 0x98, 0x63, 0xc1, 0x87, 0x5b, 0xc8, 0x71, 0x33, 0xdd, 0x14, 0x72, 0x2c,
	0xfb, 0xf6, 0x57, 0xc8, 0x4b, 0xb8, 0xbd, 0x90, 0x07, 0x0b, 0x6d, 0x5f, 0x46, 0xd0, 0xce, 0x87,
	0x7f, 0x77, 0x2d, 0xcf, 0xf4, 0x3d, 0x58, 0xb3, 0x5f, 0x34, 0xd9, 0x9b, 0xf3, 0x9e, 0xad, 0xe3,
	0xfe, 0x92, 0x1b, 0x79, 0xe8, 0x63, 0x80, 0xe9, 0x37, 0x4a, 0x9c, 0xa2, 0xcb, 0xf5, 0xcf, 0xdd,
	0xb9, 0xb3, 0xd0, 0x96, 0x05, 0xba, 0xac, 0xaa, 0x7f, 0x7f, 0x9f, 0xfd, 0x15, 0x00, 0x00, 0xff,
	0xff, 0x3c, 0x50, 0xaf, 0x42, 0x0a, 0x0e, 0x00, 0x00,
}
